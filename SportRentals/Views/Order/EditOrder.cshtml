@using System.Web.UI.WebControls
@model SportRentals.ViewModels.OrderViewModel

@{
    ViewBag.Title = "EditOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //Layout = "~/Views/Shared/_assemblylayout.cshtml";
}

@section Scripts {
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.min.js"></script>*@

    <script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>
    <link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />
}
<h2>Edit Order</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="flex-container">
        <div>
            <h4>Information</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Order.CustomerID)
            @Html.HiddenFor(model => model.Order.ShopID)
            @Html.HiddenFor(model => model.InitialStatusID)

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span>
                        @Html.LabelFor(model => model.Order.OrderID, htmlAttributes: new { @class = "input-group-text" })
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Order.OrderID, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Order.OrderID, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span>
                        @Html.LabelFor(model => model.ShopName, htmlAttributes: new { @class = "input-group-text" })
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.ShopName, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.ShopName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span>
                        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "input-group-text" })
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>


            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span>
                        @Html.LabelFor(model => model.Order.StartDate, htmlAttributes: new { @class = "input-group-text" })
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Order.StartDate, "", new { @class = "text-danger" })
                <div style="width: 74%">
                    @Html.EditorFor(model => model.Order.StartDate, new { htmlAttributes = new { @class = "form-control datetimepickerstart" } })
                </div>
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span>
                        @Html.LabelFor(model => model.Order.EndDate, htmlAttributes: new { @class = "input-group-text" })
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Order.EndDate, "", new { @class = "text-danger" })
                <div style="width: 75%">
                    @Html.EditorFor(model => model.Order.EndDate, new { htmlAttributes = new { @class = "form-control datetimepickerend" } })

                </div>
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span>
                        @Html.LabelFor(model => model.Order.CreatedDateTime, htmlAttributes: new { @class = "input-group-text" })
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Order.CreatedDateTime, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Order.CreatedDateTime, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span>
                        @Html.LabelFor(model => model.Order.Total, htmlAttributes: new { @class = "input-group-text" })
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Order.Total, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Order.Total, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    @Html.LabelFor(model => model.Order.StatusID, htmlAttributes: new { @class = "input-group-text" })
                </div>
                @Html.DropDownListFor(model => model.Order.StatusID, ViewData["StatusList"] as IEnumerable<SelectListItem>, new { @class = "custom-select" })
            </div>
        </div>
        <div>

            <h4>Products</h4>
            <hr />
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Name</th>
                        <th scope="col">Daily price</th>
                        <th scope="col">Stock</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int nr = 1;
                        for (int i = 0; i < Model.Products.Count(); i++)
                        {
                            <tr>
                                <th scope="row">@nr</th>
                                <td>@Html.DisplayFor(model => model.Products[i].Name)</td>
                                <td>@Html.DisplayFor(model => model.Products[i].DailyPrice)</td>
                                <td>@Html.DisplayFor(model => model.Products[i].Stock)</td>
                            </tr>
                            nr++;
                            @Html.HiddenFor(model => model.Products[i].ProductID)
                            @Html.HiddenFor(model => model.Products[i].Stock)
                        }
                    }

                </tbody>
            </table>
        </div>

    </div>

    <script type="text/javascript">
        $(function () {
            $('.datetimepickerend').datepicker({
                uiLibrary: 'bootstrap4'
            });
        });
        $(function () {
            $('.datetimepickerstart').datepicker({
                uiLibrary: 'bootstrap4'
            });
        });

    </script>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-9">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
